use crate::minecraft::types::MinecraftType;
use minecraft_type_derive::MinecraftType;

use crate::utils::{PacketReadable, PacketWritable};

use crate::minecraft::{
    packets::{ConnectionState, Packet},
    types,
};

#[derive(MinecraftType, Debug, Clone)]
pub struct EncryptionRequestPacket {
    pub server_id: types::String,                         // max 20 characters
    pub public_key: types::Array<types::UnsignedByte>,    // the server's public key in bytes
    pub verify_token: types::Array<types::UnsignedByte>,  // A sequence of random bytes generated by the server.
    pub should_authenticate: types::Boolean,              // Whether the client should attempt to authenticate through mojang servers.
}

impl Packet for EncryptionRequestPacket {
    const ID: i32 = 0x01;
    const PHASE: ConnectionState = ConnectionState::Login;
}